{"version":3,"sources":["components/Recommend.jsx","components/SingleMovie.jsx"],"names":["Recommend","props","recommends","className","map","recommend","to","id","src","backdrop_path","alt","title","defaultProps","SingleMovie","useContext","FavoriteContext","toggleFavorite","favorites","useState","movie","setMovie","setRecommend","isLoading","setIsLoading","check","find","favorite","API_MOVIES","API_RECOMMEND","useEffect","a","fetch","response","json","responseJSON","console","log","massage","getMovie","results","getRecommends","Loading","poster_path","release_date","value","vote_average","maxValue","text","styles","path","stroke","strokeLinecap","transition","trail","fill","fontSize","background","onClick","status","original_language","vote_count","overview"],"mappings":"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","file":"static/js/6.3aad2aab.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nRecommend.propTypes = {\r\n    recommends: PropTypes.array,\r\n};\r\n\r\nRecommend.defaultProps = {\r\n    recommends: [],\r\n}\r\n\r\nfunction Recommend(props) {\r\n    const { recommends } = props\r\n    const IMG_PATH = \"https://www.themoviedb.org/t/p/w250_and_h141_face\";\r\n    // console.log(recommends)\r\n    return (\r\n        <div>\r\n            <h3 className=\"recommend__title\">Recommendations</h3>\r\n            <div className=\"recommend scroll\">\r\n                {recommends && recommends.map(recommend => (\r\n                    <div key={recommend.id} className=\"recommend__movie\">\r\n                        <div className=\"recommend__movie-banner\">\r\n                            <Link to={`/movie/${recommend.id}`}>\r\n                                <img src={IMG_PATH + recommend.backdrop_path} alt={recommend.title} />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"recommend__movie-title\">{recommend.title}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Recommend;","import React, { useContext, useEffect, useState } from 'react'\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport Recommend from './Recommend';\r\nimport PropTypes from 'prop-types';\r\nimport { FavoriteContext } from '../context/FavoriteContext';\r\nimport Loading from './Loading';\r\n\r\nSingleMovie.propTypes = {\r\n    id: PropTypes.string,\r\n};\r\n\r\nSingleMovie.defaultProps = {\r\n    id: '',\r\n}\r\n\r\nfunction SingleMovie(props) {\r\n    const { toggleFavorite, favorites } = useContext(FavoriteContext)\r\n\r\n    const { id } = props\r\n    const [movie, setMovie] = useState({})\r\n    const [recommends, setRecommend] = useState()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    let check = favorites.find(favorite => favorite === movie.id)\r\n\r\n    const API_MOVIES = `https://api.themoviedb.org/3/movie/${id}?api_key=04c35731a5ee918f014970082a0088b1&language=en-US`\r\n    const IMG_PATH = \"https://image.tmdb.org/t/p/w300\";\r\n    const API_RECOMMEND = `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=04c35731a5ee918f014970082a0088b1&language=en-US&page=1`\r\n\r\n    useEffect(() => {\r\n        const getMovie = async () => {\r\n            try {\r\n                const response = await fetch(API_MOVIES)\r\n                const responseJSON = await response.json()\r\n                setMovie(responseJSON)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.log(error.massage)\r\n            }\r\n        }\r\n        getMovie()\r\n    }, [API_MOVIES])\r\n\r\n    useEffect(() => {\r\n        const getRecommends = async () => {\r\n            try {\r\n                const response = await fetch(API_RECOMMEND)\r\n                const responseJSON = await response.json()\r\n                setRecommend(responseJSON.results)\r\n            } catch (error) {\r\n                console.log(error.massage)\r\n            }\r\n        }\r\n        getRecommends()\r\n    }, [API_RECOMMEND])\r\n    return (\r\n        <div className=\"detail-page\">\r\n            {\r\n                isLoading ?\r\n                    <Loading /> :\r\n                    (<div className=\"detail-before\">\r\n                        <div className=\"detail\">\r\n                            <div className=\"detail__img\">\r\n                                <img src={IMG_PATH + movie.poster_path} alt={movie.title} />\r\n                            </div>\r\n                            <div className=\"detail__content\">\r\n                                <div className=\"detail__content-name color-white\">\r\n                                    <h3>{movie.title}</h3>\r\n                                    <p>{movie.release_date}</p>\r\n                                </div>\r\n                                <div className=\"detail__content-summary\">\r\n                                    <div className=\"detail__content-summary-top\">\r\n                                        <div className=\"detail__content-summary-top-left\">\r\n                                            <CircularProgressbar\r\n                                                value={movie.vote_average}\r\n                                                maxValue={10}\r\n                                                text={movie.vote_average + '/10'}\r\n                                                styles={{\r\n                                                    path: {\r\n                                                        stroke: `${movie.vote_average >= 7.5 ? '#21d07a' : '#c7ca2e'}`,\r\n                                                        strokeLinecap: 'round',\r\n                                                        transition: 'stroke-dashoffset 0.5s ease 0s',\r\n                                                    },\r\n                                                    trail: {\r\n                                                        stroke: '#053752',\r\n                                                        strokeLinecap: 'round',\r\n                                                    },\r\n                                                    text: {\r\n                                                        fill: `${movie.vote_average >= 7.5 ? '#21d07a' : '#c7ca2e'}`,\r\n                                                        fontSize: '22px',\r\n                                                    },\r\n                                                    background: {\r\n                                                        fill: `${movie.vote_average >= 7.5 ? '#21d07a' : '#c7ca2e'}`\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"detail__content-summary-top-right\">\r\n                                            <span className=\"like-movie\">\r\n                                                <i className={`fas fa-heart ${check ? \"liked\" : \"\"}`} onClick={() => toggleFavorite(movie.id)}></i>\r\n                                                <div className=\"detail__content-summary-top-right-icon\">Add this movie to your favorite list</div>\r\n                                            </span>\r\n                                            <span className=\"wrap-icon\"><i className=\"fas fa-play no-bg\"></i>Play Trailer</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"detail__content-summary-bottom\">\r\n                                        <p className=\"color-white\">Status: {movie.status}</p>\r\n                                        <p className=\"color-white\">Language: {movie.original_language}</p>\r\n                                        <p className=\"color-white\">Vote Average: {movie.vote_average}</p>\r\n                                        <p className=\"color-white\">Vote Count: {movie.vote_count}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"detail__content-overview color-white\">\r\n                                    <h3>Overview</h3>\r\n                                    <p>\r\n                                        {movie.overview}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n            <Recommend recommends={recommends} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SingleMovie;"],"sourceRoot":""}