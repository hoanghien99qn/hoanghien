{"version":3,"sources":["components/Loading.jsx","api/axiosClient.js","api/tmdbApi.js","api/apiConfig.js","context/FavoriteContext.js","config/Genres.js","components/Category.jsx","ScrollToTop.js","config/Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","axiosClient","axios","create","baseURL","apiConfig","baseUrl","headers","paramsSerializer","params","queryString","stringify","api_key","apiKey","interceptors","request","use","a","config","response","data","error","movieType","popular","top_rated","upcoming","tmdbApi","getMovieList","type","url","get","getVideos","id","getRecommendations","detail","search","originalImage","imgPath","w220Image","w300Image","w1920Image","FavoriteContext","createContext","FavoriteContextProvider","children","FAVORITE_KEY","initFavorite","JSON","parse","localStorage","getItem","useState","favorites","setFavorites","setItem","FavoriteContextData","toggleFavorite","check","find","favorite","undefined","filter","Provider","value","Genres","pathname","name","Category","isGenres","setIsGenres","to","activeClassName","onClick","map","Genre","ScrollToTop","useLocation","useEffect","window","scrollTo","DetailMovie","React","lazy","Home","Favorite","Routes","path","render","props","Suspense","fallback","exact","App","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a65c4c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../src/assets/Loading.css'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"loader\">\r\n                <div className=\"outer\"></div>\r\n                <div className=\"middle\"></div>\r\n                <div className=\"inner\"></div>\r\n            </div></div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Loading;","import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nimport apiConfig from './apiConfig';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: apiConfig.baseUrl,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    paramsSerializer: params => queryString.stringify({ ...params, api_key: apiConfig.apiKey })\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => config);\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n\r\n    return response;\r\n}, (error) => {\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from './axiosClient'\r\n\r\nexport const movieType = {\r\n    popular: 'popular',\r\n    top_rated: 'top_rated',\r\n    upcoming: 'upcoming'\r\n}\r\n\r\n\r\nconst tmdbApi = {\r\n    getMovieList: (type, params) => {\r\n        const url = 'movie/' + movieType[type]\r\n        return axiosClient.get(url, params)\r\n    },\r\n    getVideos: (id) => {\r\n        const url = 'movie/' + id + '/videos'\r\n        return axiosClient.get(url, { params: {} })\r\n    },\r\n    getRecommendations: (id) => {\r\n        const url = 'movie/' + id + '/recommendations'\r\n        return axiosClient.get(url, { params: {} })\r\n    },\r\n    detail: (id, params) => {\r\n        const url = 'movie/' + id\r\n        return axiosClient.get(url, params)\r\n    },\r\n    search: (params) => {\r\n        const url = 'search/movie/'\r\n        return axiosClient.get(url, params)\r\n    }\r\n}\r\n\r\nexport default tmdbApi","const apiConfig = {\r\n    baseUrl: '//api.themoviedb.org/3/',\r\n    apiKey: '04c35731a5ee918f014970082a0088b1',\r\n    originalImage: (imgPath) => `//www.themoviedb.org/t/p/original/${imgPath}`,\r\n    w220Image: (imgPath) => `//www.themoviedb.org/t/p/w220_and_h330_face/${imgPath}`,\r\n    w300Image: (imgPath) => `//www.themoviedb.org/t/p/w300/${imgPath}`,\r\n    w1920Image: (imgPath) => `//www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${imgPath}`,\r\n}\r\n\r\nexport default apiConfig","import React, { useState, createContext } from 'react'\r\n\r\nexport const FavoriteContext = createContext()\r\n\r\nfunction FavoriteContextProvider({ children }) {\r\n    const FAVORITE_KEY = \"favoriteKey\"\r\n    const initFavorite = JSON.parse(localStorage.getItem(FAVORITE_KEY)) || []\r\n\r\n    const [favorites, setFavorites] = useState(initFavorite)\r\n\r\n    const toggleFavorite = (id) => {\r\n        let check = favorites.find(favorite => favorite === id)\r\n        if (check !== undefined) {\r\n            setFavorites(favorites.filter(favorite => favorite !== id))\r\n        } else {\r\n            setFavorites([...favorites, id])\r\n        }\r\n    }\r\n\r\n    localStorage.setItem(FAVORITE_KEY, JSON.stringify(favorites))\r\n    const FavoriteContextData = {\r\n        favorites,\r\n        toggleFavorite\r\n    }\r\n\r\n    return (\r\n        <FavoriteContext.Provider value={FavoriteContextData}>\r\n            {children}\r\n        </FavoriteContext.Provider>\r\n    );\r\n}\r\n\r\nexport default FavoriteContextProvider","const Genres = [\r\n    {\r\n        pathname: \"/home/action\",\r\n        id: 28,\r\n        name: \"Action\"\r\n    },\r\n    {\r\n        pathname: \"/home/adventure\",\r\n        id: 12,\r\n        name: \"Adventure\"\r\n    },\r\n    {\r\n        pathname: \"/home/animation\",\r\n        id: 16,\r\n        name: \"Animation\"\r\n    },\r\n    {\r\n        pathname: \"/home/comedy\",\r\n        id: 35,\r\n        name: \"Comedy\"\r\n    },\r\n    {\r\n        pathname: \"/home/crime\",\r\n        id: 80,\r\n        name: \"Crime\"\r\n    },\r\n    {\r\n        pathname: \"/home/documentary\",\r\n        id: 99,\r\n        name: \"Documentary\"\r\n    },\r\n    {\r\n        pathname: \"/home/drama\",\r\n        id: 18,\r\n        name: \"Drama\"\r\n    },\r\n    {\r\n        pathname: \"/home/family\",\r\n        id: 10751,\r\n        name: \"Family\"\r\n    },\r\n    {\r\n        pathname: \"/home/fantasy\",\r\n        id: 14,\r\n        name: \"Fantasy\"\r\n    },\r\n    {\r\n        pathname: \"/home/history\",\r\n        id: 36,\r\n        name: \"History\"\r\n    },\r\n    {\r\n        pathname: \"/home/horror\",\r\n        id: 27,\r\n        name: \"Horror\"\r\n    },\r\n    {\r\n        pathname: \"/home/music\",\r\n        id: 10402,\r\n        name: \"Music\"\r\n    },\r\n    {\r\n        pathname: \"/home/mystery\",\r\n        id: 9648,\r\n        name: \"Mystery\"\r\n    },\r\n    {\r\n        pathname: \"/home/romance\",\r\n        id: 10749,\r\n        name: \"Romance\"\r\n    },\r\n    {\r\n        pathname: \"/home/science+fiction\",\r\n        id: 878,\r\n        name: \"Science Fiction\"\r\n    },\r\n    {\r\n        pathname: \"/home/tV+movie\",\r\n        id: 10770,\r\n        name: \"TV Movie\"\r\n    },\r\n    {\r\n        pathname: \"/home/thriller\",\r\n        id: 53,\r\n        name: \"Thriller\"\r\n    },\r\n    {\r\n        pathname: \"/home/war\",\r\n        id: 10752,\r\n        name: \"War\"\r\n    },\r\n    {\r\n        pathname: \"/home/western\",\r\n        id: 37,\r\n        name: \"Western\"\r\n    }\r\n]\r\n\r\nexport default Genres","import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Genres from '../config/Genres'\r\nimport { movieType } from '../api/tmdbApi'\r\n\r\nfunction Category() {\r\n\r\n    const [isGenres, setIsGenres] = useState(false)\r\n\r\n    const toggleGenres = () => {\r\n        setIsGenres(!isGenres)\r\n    }\r\n\r\n    return (\r\n        <section className=\"category scroll ltr\">\r\n            <NavLink to=\"/home\" className=\"link no-active\">\r\n                <div className=\"logo box\">\r\n                    <i className=\"fas fa-film logo__icon\" />\r\n                    <p className=\"logo__text\">Hoang Hien</p>\r\n                </div>\r\n            </NavLink>\r\n\r\n            <div className=\"control box\">\r\n                <ul className=\"control__list\">\r\n                    <li className=\"control__item\">\r\n                        <NavLink activeClassName=\"active\" to=\"/favorites\" className=\"control__link\">\r\n                            <i className=\"far fa-clock\" />\r\n                            Favorite Movies\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"user box\">\r\n                <ul className=\"user__list\">\r\n                    <li className=\"user__item\">\r\n                        <NavLink activeClassName=\"active\" to={`/home/${movieType.popular}`} className=\"user__link\"><i className=\"fas fa-tv\"></i>Popular</NavLink>\r\n                    </li>\r\n                    <li className=\"user__item\">\r\n                        <NavLink activeClassName=\"active\" to={`/home/${movieType.top_rated}`} className=\"user__link\"><i className=\"far fa-clock\"></i>Top Rated</NavLink>\r\n                    </li>\r\n                    <li className=\"user__item\">\r\n                        <NavLink activeClassName=\"active\" to={`/home/${movieType.upcoming}`} className=\"user__link\"><i className=\"far fa-clock\"></i>Upcoming</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"setting box\">\r\n                <div className=\"dropdown\">\r\n                    <p className=\"dropdown-para\" onClick={toggleGenres}>Genres <i className=\"fas fa-caret-down\"></i></p>\r\n                </div>\r\n                <ul className={`setting__list ${isGenres ? \"activeGenres\" : \"\"}`}>\r\n                    {Genres.map(Genre => (\r\n                        <li className=\"control__item\" key={Genre.name}>\r\n                            <NavLink activeClassName=\"active\" to={Genre} className=\"control__link\">\r\n                                <i className=\"far fa-clock\" />\r\n                                {Genre.name}\r\n                            </NavLink>\r\n                        </li>\r\n                    ))}\r\n\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Category;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","import React from 'react';\r\n\r\nimport Loading from '../components/Loading'\r\nimport { Route, Switch } from 'react-router-dom';\r\nconst DetailMovie = React.lazy(() => import('../pages/DetailMovie'))\r\nconst Home = React.lazy(() => import('../pages/Home'))\r\nconst Favorite = React.lazy(() => import('../pages/Favorite'))\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            {/* Home */}\r\n            <Route\r\n                path=\"/home\"\r\n                render={props => (\r\n                    <React.Suspense fallback={<Loading />}>\r\n                        <Home {...props} />\r\n                    </React.Suspense>\r\n                )}\r\n            />\r\n            {/* search */}\r\n            <Route\r\n                path=\"/search/:query\"\r\n                render={props => (\r\n                    <React.Suspense fallback={<Loading />}>\r\n                        <Home {...props} />\r\n                    </React.Suspense>\r\n                )}\r\n            />\r\n            {/* Detail */}\r\n            <Route\r\n                path=\"/detail/:id\"\r\n                exact\r\n                render={props => (\r\n                    <React.Suspense fallback={<Loading />}>\r\n                        <DetailMovie {...props} />\r\n                    </React.Suspense>\r\n                )}\r\n            />\r\n            {/* Favorites */}\r\n            <Route\r\n                path=\"/favorites\"\r\n                exact\r\n                render={props => (\r\n                    <React.Suspense fallback={<Loading />}>\r\n                        <Favorite {...props} />\r\n                    </React.Suspense>\r\n                )}\r\n            />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;","import './assets/grid.css'\r\nimport './assets/style.css'\r\nimport './assets/responsive.css'\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\"\r\nimport Category from './components/Category';\r\nimport ScrollToTop from './ScrollToTop'\r\nimport FavoriteContextProvider from './context/FavoriteContext';\r\nimport Routes from './config/Routes'\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ScrollToTop />\r\n      <FavoriteContextProvider>\r\n        <div className=\"app\">\r\n          <Category />\r\n          <Switch>\r\n            <Redirect exact from=\"/movie-trailer\" to=\"/home\" />\r\n            <Routes />\r\n          </Switch>\r\n        </div>\r\n      </FavoriteContextProvider>\r\n\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}